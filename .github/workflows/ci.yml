name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Setup C++ Environment"
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm
          vcvarsall: false
          cmake: true
          ninja: true
          clangtidy: false
          cppcheck: false
          gcovr: "5.0"
          opencppcoverage: false

      - name: "Setup Java"
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          check-latest: true

      - name: "Setup Emscripten"
        uses: mymindstorm/setup-emsdk@v7

      - name: "Install Linux Dependencies"
        run: sudo apt install libboost-graph-dev uuid-dev

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install npm dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Format
        run: npm run format

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: ["test"]
    if: ${{ !contains(github.event.head_commit.message , 'skip-release') && github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install npm dependencies
        run: npm install

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Release
        run: npx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
