// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate braces vs parenthesis 1`] = `
"A       
 (1 + 2)
        
A       
 1 + 2  
        
 1 + 2  
A       
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate continued fraction 1`] = `
"                   1         
psi = 1 + -------------------
                     1       
          1 + ---------------
                       1     
              1 + -----------
                         1   
                  1 + -------
                      1 + ...
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate factorial 1`] = `
"/n\\        n!      
| | = -------------
\\k/   k! . (n - k)!
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate fraction 1`] = `
"             x  
f(x) = 1 + -----
           1 + x
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate integral 1`] = `
" 1              
 .-            3
 |   2        n 
-'  x  . dx = --
 0             3
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate limits 1`] = `
"              1    
lim           - = 0
x -> infinity x    
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate math symbols 1`] = `
"Alpha + alpha + Digamma + digamma + Kappa + kappa + Omicron       
omicron + Upsilon + upsilon + Beta + beta + Zeta + zeta + Lambda  
lambda + Pi + pi + Phi + phi + Gamma + gamma + Eta + eta + Mu + mu
Rho + rho + Chi + chi + Delta + delta + Theta + theta + Nu + nu   
Sigma + sigma + Psi + psi + Epsilon + epsilon + Iota + iota + Xi  
xi + Tau + tau + Omega + omega                                    
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate mathbb 1`] = `
"ℝ                                                  
                                                   
ℝ                                                  
                                                   
𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ      
                                                   
𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙ⅈ𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫
                                                   
𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡                               
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate matrix 1`] = `
"/1 2\\   /x\\   /1 . x + 2 . y\\
|   | . | | = |             |
\\3 4/   \\y/   \\3 . x + 4 . y/
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate product 1`] = `
"                    2    
  n        /  n    \\     
____   2   |____   |     
 ||   i  = | ||   i|     
i = 1      \\i = 1  /     
                         
                         
                         
 100                     
_____ 1                  
 | |  - = 7.8886091e - 31
 | |  2                  
  1                      
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate quoted string 1`] = `
"x_n
x  
 n 
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate square root 1`] = `
"     _____________
    /        _____
   /        /    x
  /  1 +   / 1 + -
\\/       \\/      2
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate subscript 1`] = `
"S  = u  + u  + ... + u 
 n    1    2          n
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate summation 1`] = `
"  n                   
 ===        3    2    
 \\     2   n    n    n
 /    i  = -- + -- + -
 ===        2    2   6
i = 0                 
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":false} > should translate vector 1`] = `
"/a\\   /c\\   /a + c\\
| | + | | = |     |
\\b/   \\d/   \\b + d/
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate braces vs parenthesis 1`] = `
"A       
 (1 + 2)
        
A       
 1 + 2  
        
 1 + 2  
A       
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate continued fraction 1`] = `
"                 1         
ψ = 1 + -------------------
                   1       
        1 + ---------------
                     1     
            1 + -----------
                       1   
                1 + -------
                    1 + ...
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate factorial 1`] = `
"/n\\        n!      
| | = -------------
\\k/   k! . (n - k)!
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate fraction 1`] = `
"             x  
f(x) = 1 + -----
           1 + x
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate integral 1`] = `
" 1              
 .-            3
 |   2        n 
-'  x  . dx = --
 0             3
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate limits 1`] = `
"       1    
lim    - = 0
x -> ∞ x    
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate math symbols 1`] = `
"Α + α + Ϝ + ϝ + Κ + ϰ + Ο                
ο + Υ + υ + Β + β + Ζ + ζ + Λ            
λ + Π + π + ϕ + φ + Γ + γ + Η + η + Μ + μ
ρ + ϱ + Χ + χ + Δ + δ + θ + ϑ + Ν + ν    
σ + ς + Ψ + ψ + ϵ + ε + Ι + ι + Ξ        
ξ + Τ + τ + Ω + ω                        
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate mathbb 1`] = `
"ℝ                                                  
                                                   
ℝ                                                  
                                                   
𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ      
                                                   
𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙ⅈ𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫
                                                   
𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡                               
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate matrix 1`] = `
"/1 2\\   /x\\   /1 . x + 2 . y\\
|   | . | | = |             |
\\3 4/   \\y/   \\3 . x + 4 . y/
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate product 1`] = `
"                    2    
  n        /  n    \\     
____   2   |____   |     
 ||   i  = | ||   i|     
i = 1      \\i = 1  /     
                         
                         
                         
 100                     
_____ 1                  
 | |  - = 7.8886091e - 31
 | |  2                  
  1                      
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate quoted string 1`] = `
"x_n
x  
 n 
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate square root 1`] = `
"     _____________
    /        _____
   /        /    x
  /  1 +   / 1 + -
\\/       \\/      2
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate subscript 1`] = `
"S  = u  + u  + ... + u 
 n    1    2          n
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate summation 1`] = `
"  n                   
 ===        3    2    
 \\     2   n    n    n
 /    i  = -- + -- + -
 ===        2    2   6
i = 0                 
"
`;

exports[`Math expression translation > With options {"style":"ASCII","transformMathLetters":true} > should translate vector 1`] = `
"/a\\   /c\\   /a + c\\
| | + | | = |     |
\\b/   \\d/   \\b + d/
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate braces vs parenthesis 1`] = `
"A_{\\left(1 + 2\\right)} \\\\
\\\\
A_{1 + 2} \\\\
\\\\
A^{1 + 2}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate continued fraction 1`] = `
"psi = 1 + \\frac{1}{1 + \\frac{1}{1 + \\frac{1}{1 + \\frac{1}{1 + \\ldots}}}}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate factorial 1`] = `
"\\begin{pmatrix} n \\\\ k \\end{pmatrix} = \\frac{n!}{k! \\cdot \\left(n - k\\right)!}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate fraction 1`] = `
"f\\left(x\\right) = 1 + \\frac{x}{1 + x}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate integral 1`] = `
"\\int_{0}^{1} x^{2} \\cdot dx = \\frac{n^{3}}{3}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate limits 1`] = `
"\\lim_{x \\to infinity} \\frac{1}{x} = 0
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate math symbols 1`] = `
"Alpha + alpha + Digamma + digamma + Kappa + kappa + Omicron \\\\
omicron + Upsilon + upsilon + Beta + beta + Zeta + zeta + Lambda \\\\
lambda + Pi + pi + Phi + phi + Gamma + gamma + Eta + eta + Mu + mu \\\\
Rho + rho + Chi + chi + Delta + delta + Theta + theta + Nu + nu \\\\
Sigma + sigma + Psi + psi + Epsilon + epsilon + Iota + iota + Xi \\\\
xi + Tau + tau + Omega + omega
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate mathbb 1`] = `
"\\mathbb{R} \\\\
\\\\
\\mathbb{R} \\\\
\\\\
\\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ} \\\\
\\\\
\\mathbb{abcdefghijklmnopqrstuvwxyz} \\\\
\\\\
\\mathbb{0123456789}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate matrix 1`] = `
"\\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\end{pmatrix} = \\begin{pmatrix} 1 \\cdot x + 2 \\cdot y \\\\ 3 \\cdot x + 4 \\cdot y \\end{pmatrix}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate product 1`] = `
"\\prod_{i = 1}^{n} i^{2} = \\left(\\prod_{i = 1}^{n} i\\right)^{2} \\\\
\\\\
\\\\
\\\\
\\prod_{1}^{100} \\frac{1}{2} = 7.8886091e - 31
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate quoted string 1`] = `
""x_n" \\\\
x_{n}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate square root 1`] = `
"\\sqrt{1 + \\sqrt{1 + \\frac{x}{2}}}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate subscript 1`] = `
"S_{n} = u_{1} + u_{2} + \\ldots + u_{n}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate summation 1`] = `
"\\sum_{i = 0}^{n} i^{2} = \\frac{n^{3}}{2} + \\frac{n^{2}}{2} + \\frac{n}{6}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":false} > should translate vector 1`] = `
"\\begin{pmatrix} a \\\\ b \\end{pmatrix} + \\begin{pmatrix} c \\\\ d \\end{pmatrix} = \\begin{pmatrix} a + c \\\\ b + d \\end{pmatrix}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate braces vs parenthesis 1`] = `
"A_{\\left(1 + 2\\right)} \\\\
\\\\
A_{1 + 2} \\\\
\\\\
A^{1 + 2}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate continued fraction 1`] = `
"\\psi = 1 + \\frac{1}{1 + \\frac{1}{1 + \\frac{1}{1 + \\frac{1}{1 + \\ldots}}}}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate factorial 1`] = `
"\\begin{pmatrix} n \\\\ k \\end{pmatrix} = \\frac{n!}{k! \\cdot \\left(n - k\\right)!}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate fraction 1`] = `
"f\\left(x\\right) = 1 + \\frac{x}{1 + x}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate integral 1`] = `
"\\int_{0}^{1} x^{2} \\cdot dx = \\frac{n^{3}}{3}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate limits 1`] = `
"\\lim_{x \\to \\infty} \\frac{1}{x} = 0
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate math symbols 1`] = `
"\\Alpha + \\alpha + \\Digamma + \\digamma + \\Kappa + \\kappa + \\Omicron \\\\
\\omicron + \\Upsilon + \\upsilon + \\Beta + \\beta + \\Zeta + \\zeta + \\Lambda \\\\
\\lambda + \\Pi + \\pi + \\Phi + \\phi + \\Gamma + \\gamma + \\Eta + \\eta + \\Mu + \\mu \\\\
\\Rho + \\rho + \\Chi + \\chi + \\Delta + \\delta + \\Theta + \\theta + \\Nu + \\nu \\\\
\\Sigma + \\sigma + \\Psi + \\psi + \\Epsilon + \\epsilon + \\Iota + \\iota + \\Xi \\\\
\\xi + \\Tau + \\tau + \\Omega + \\omega
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate mathbb 1`] = `
"\\mathbb{R} \\\\
\\\\
\\mathbb{R} \\\\
\\\\
\\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ} \\\\
\\\\
\\mathbb{abcdefghijklmnopqrstuvwxyz} \\\\
\\\\
\\mathbb{0123456789}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate matrix 1`] = `
"\\begin{pmatrix} 1 & 2 \\\\ 3 & 4 \\end{pmatrix} \\cdot \\begin{pmatrix} x \\\\ y \\end{pmatrix} = \\begin{pmatrix} 1 \\cdot x + 2 \\cdot y \\\\ 3 \\cdot x + 4 \\cdot y \\end{pmatrix}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate product 1`] = `
"\\prod_{i = 1}^{n} i^{2} = \\left(\\prod_{i = 1}^{n} i\\right)^{2} \\\\
\\\\
\\\\
\\\\
\\prod_{1}^{100} \\frac{1}{2} = 7.8886091e - 31
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate quoted string 1`] = `
""x_n" \\\\
x_{n}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate square root 1`] = `
"\\sqrt{1 + \\sqrt{1 + \\frac{x}{2}}}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate subscript 1`] = `
"S_{n} = u_{1} + u_{2} + \\ldots + u_{n}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate summation 1`] = `
"\\sum_{i = 0}^{n} i^{2} = \\frac{n^{3}}{2} + \\frac{n^{2}}{2} + \\frac{n}{6}
"
`;

exports[`Math expression translation > With options {"style":"Latex","transformMathLetters":true} > should translate vector 1`] = `
"\\begin{pmatrix} a \\\\ b \\end{pmatrix} + \\begin{pmatrix} c \\\\ d \\end{pmatrix} = \\begin{pmatrix} a + c \\\\ b + d \\end{pmatrix}
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate braces vs parenthesis 1`] = `
"A       
 (1 + 2)
        
A       
 1 + 2  
        
 1 + 2  
A       
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate continued fraction 1`] = `
"                   1         
psi = 1 + ───────────────────
                     1       
          1 + ───────────────
                       1     
              1 + ───────────
                         1   
                  1 + ───────
                      1 + ...
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate factorial 1`] = `
"⎛n⎞        n!      
⎜ ⎟ = ─────────────
⎝k⎠   k! ⋅ (n - k)!
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate fraction 1`] = `
"             x  
f(x) = 1 + ─────
           1 + x
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate integral 1`] = `
"1            3
⌠  2        n 
⌡ x  ⋅ dx = ──
0            3
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate limits 1`] = `
"             1    
lim          ─ = 0
x ⟶ infinity x    
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate math symbols 1`] = `
"Alpha + alpha + Digamma + digamma + Kappa + kappa + Omicron       
omicron + Upsilon + upsilon + Beta + beta + Zeta + zeta + Lambda  
lambda + Pi + pi + Phi + phi + Gamma + gamma + Eta + eta + Mu + mu
Rho + rho + Chi + chi + Delta + delta + Theta + theta + Nu + nu   
Sigma + sigma + Psi + psi + Epsilon + epsilon + Iota + iota + Xi  
xi + Tau + tau + Omega + omega                                    
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate mathbb 1`] = `
"ℝ                                                  
                                                   
ℝ                                                  
                                                   
𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ      
                                                   
𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙ⅈ𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫
                                                   
𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡                               
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate matrix 1`] = `
"⎛1 2⎞   ⎛x⎞   ⎛1 ⋅ x + 2 ⋅ y⎞
⎜   ⎟ ⋅ ⎜ ⎟ = ⎜             ⎟
⎝3 4⎠   ⎝y⎠   ⎝3 ⋅ x + 4 ⋅ y⎠
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate product 1`] = `
"                    2    
  n        ⎛  n    ⎞     
━┳┳━   2   ⎜━┳┳━   ⎟     
 ┃┃   i  = ⎜ ┃┃   i⎟     
i = 1      ⎝i = 1  ⎠     
                         
                         
                         
 100                     
━┳━┳━ 1                  
 ┃ ┃  ─ = 7.8886091e - 31
 ┃ ┃  2                  
  1                      
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate quoted string 1`] = `
"x_n
x  
 n 
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate square root 1`] = `
"     _____________
    ╱        _____
   ╱        ╱    x
  ╱  1 +   ╱ 1 + ─
╲╱       ╲╱      2
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate subscript 1`] = `
"S  = u  + u  + ... + u 
 n    1    2          n
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate summation 1`] = `
"  n                   
 ___        3    2    
 ╲     2   n    n    n
 ╱    i  = ── + ── + ─
 ‾‾‾        2    2   6
i = 0                 
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":false} > should translate vector 1`] = `
"⎛a⎞   ⎛c⎞   ⎛a + c⎞
⎜ ⎟ + ⎜ ⎟ = ⎜     ⎟
⎝b⎠   ⎝d⎠   ⎝b + d⎠
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate braces vs parenthesis 1`] = `
"A       
 (1 + 2)
        
A       
 1 + 2  
        
 1 + 2  
A       
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate continued fraction 1`] = `
"                 1         
ψ = 1 + ───────────────────
                   1       
        1 + ───────────────
                     1     
            1 + ───────────
                       1   
                1 + ───────
                    1 + ...
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate factorial 1`] = `
"⎛n⎞        n!      
⎜ ⎟ = ─────────────
⎝k⎠   k! ⋅ (n - k)!
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate fraction 1`] = `
"             x  
f(x) = 1 + ─────
           1 + x
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate integral 1`] = `
"1            3
⌠  2        n 
⌡ x  ⋅ dx = ──
0            3
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate limits 1`] = `
"      1    
lim   ─ = 0
x ⟶ ∞ x    
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate math symbols 1`] = `
"Α + α + Ϝ + ϝ + Κ + ϰ + Ο                
ο + Υ + υ + Β + β + Ζ + ζ + Λ            
λ + Π + π + ϕ + φ + Γ + γ + Η + η + Μ + μ
ρ + ϱ + Χ + χ + Δ + δ + θ + ϑ + Ν + ν    
σ + ς + Ψ + ψ + ϵ + ε + Ι + ι + Ξ        
ξ + Τ + τ + Ω + ω                        
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate mathbb 1`] = `
"ℝ                                                  
                                                   
ℝ                                                  
                                                   
𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ      
                                                   
𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙ⅈ𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫
                                                   
𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡                               
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate matrix 1`] = `
"⎛1 2⎞   ⎛x⎞   ⎛1 ⋅ x + 2 ⋅ y⎞
⎜   ⎟ ⋅ ⎜ ⎟ = ⎜             ⎟
⎝3 4⎠   ⎝y⎠   ⎝3 ⋅ x + 4 ⋅ y⎠
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate product 1`] = `
"                    2    
  n        ⎛  n    ⎞     
━┳┳━   2   ⎜━┳┳━   ⎟     
 ┃┃   i  = ⎜ ┃┃   i⎟     
i = 1      ⎝i = 1  ⎠     
                         
                         
                         
 100                     
━┳━┳━ 1                  
 ┃ ┃  ─ = 7.8886091e - 31
 ┃ ┃  2                  
  1                      
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate quoted string 1`] = `
"x_n
x  
 n 
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate square root 1`] = `
"     _____________
    ╱        _____
   ╱        ╱    x
  ╱  1 +   ╱ 1 + ─
╲╱       ╲╱      2
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate subscript 1`] = `
"S  = u  + u  + ... + u 
 n    1    2          n
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate summation 1`] = `
"  n                   
 ___        3    2    
 ╲     2   n    n    n
 ╱    i  = ── + ── + ─
 ‾‾‾        2    2   6
i = 0                 
"
`;

exports[`Math expression translation > With options {"style":"Unicode","transformMathLetters":true} > should translate vector 1`] = `
"⎛a⎞   ⎛c⎞   ⎛a + c⎞
⎜ ⎟ + ⎜ ⎟ = ⎜     ⎟
⎝b⎠   ⎝d⎠   ⎝b + d⎠
"
`;
